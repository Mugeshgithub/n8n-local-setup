{
  "name": "Vijay Success Stories - Political Campaign Automation",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hour",
              "value": 6
            }
          ]
        }
      },
      "id": "daily-schedule-trigger",
      "name": "Daily Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [240, 200]
    },
    {
      "parameters": {
        "jsCode": "// Determine today's theme based on day of week\nconst today = new Date();\nconst dayOfWeek = today.getDay();\n\nconst themes = {\n  1: 'early_struggles',\n  2: 'career_setbacks', \n  3: 'struggles_determination',\n  4: 'success_through_struggle',\n  5: 'career_evolution',\n  6: 'long_term_success'\n};\n\nconst themeNames = {\n  'early_struggles': 'Early Struggles & Failures',\n  'career_setbacks': 'Career Setbacks & Comebacks',\n  'struggles_determination': 'Struggles & Determination',\n  'success_through_struggle': 'Success Through Struggle',\n  'career_evolution': 'Career Evolution & Growth',\n  'long_term_success': 'Long-term Success & Impact'\n};\n\nconst currentTheme = themes[dayOfWeek] || 'early_struggles';\nconst themeName = themeNames[currentTheme];\n\n// Generate 5 story ideas for today's theme\nconst storyIdeas = {\n  'early_struggles': [\n    'first_5_movies_flops',\n    'flop_vijay_nickname',\n    '10_years_before_hit',\n    'rejected_by_directors',\n    'financial_struggles_early'\n  ],\n  'career_setbacks': [\n    '3_year_career_slump',\n    'changed_acting_style',\n    'almost_written_off',\n    'reinvented_himself',\n    'comeback_took_years'\n  ],\n  'struggles_determination': [\n    '10_years_before_hit',\n    'rejected_multiple_directors',\n    'faced_criticism_rejection',\n    'never_gave_up',\n    'determination_paid_off'\n  ],\n  'success_through_struggle': [\n    'thuppakki_20_years',\n    'mersal_social_issues',\n    'bigil_women_empowerment',\n    'master_teaching_importance',\n    'varisu_family_values'\n  ],\n  'career_evolution': [\n    'started_production_house',\n    'supports_new_talent',\n    'creative_control',\n    'mentors_young_actors',\n    'gives_back_industry'\n  ],\n  'long_term_success': [\n    'career_30_years',\n    'movies_social_change',\n    'uses_platform_good',\n    'success_consistency',\n    'legacy_inspire_generations'\n  ]\n};\n\nconst todayStories = storyIdeas[currentTheme] || storyIdeas['early_struggles'];\n\nreturn {\n  theme: currentTheme,\n  themeName: themeName,\n  storyIdeas: todayStories,\n  date: today.toISOString().split('T')[0],\n  dayOfWeek: dayOfWeek\n};"
      },
      "id": "theme-selector",
      "name": "Theme Selector",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [460, 200]
    },
    {
      "parameters": {
        "url": "https://api.openai.com/v1/chat/completions",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "openAiApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{ $credentials.openAiApi.apiKey }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "gpt-4"
            },
            {
              "name": "messages",
              "value": [
                {
                  "role": "system",
                  "content": "You are a content creator for a political campaign focused on Vijay's career success stories. Create positive, motivational 'Did you know?' content that inspires people. Requirements: Only use verified, positive facts about Vijay's career. Focus on struggles, failures, and comebacks. No personal details (family, relationships). No controversial topics. Only career-related content. Keep tone motivational and inspiring. Maximum 150 words per story."
                },
                {
                  "role": "user",
                  "content": "Create 5 'Did you know?' stories about Vijay's {{ $json.themeName }}. Each story should be motivational and focus on his career struggles and successes. Stories should be: 1) {{ $json.storyIdeas[0] }}, 2) {{ $json.storyIdeas[1] }}, 3) {{ $json.storyIdeas[2] }}, 4) {{ $json.storyIdeas[3] }}, 5) {{ $json.storyIdeas[4] }}. Format each as 'Did you know? [story]' with a motivational message at the end."
                }
              ]
            },
            {
              "name": "max_tokens",
              "value": 2000
            },
            {
              "name": "temperature",
              "value": 0.7
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "content-generator",
      "name": "Content Generator",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [680, 200]
    },
    {
      "parameters": {
        "jsCode": "// Parse and structure the generated content\nconst response = $input.first().json;\nconst stories = response.choices[0].message.content;\n\n// Split stories into individual items\nconst storyLines = stories.split('\\n').filter(line => line.trim().length > 0);\nconst structuredStories = [];\n\nstoryLines.forEach((line, index) => {\n  if (line.includes('Did you know?')) {\n    const story = line.trim();\n    const motivationalMessage = story.split('.').pop().trim();\n    \n    structuredStories.push({\n      id: `story_${index + 1}`,\n      content: story,\n      motivationalMessage: motivationalMessage,\n      theme: $('Theme Selector').first().json.theme,\n      themeName: $('Theme Selector').first().json.themeName,\n      date: $('Theme Selector').first().json.date\n    });\n  }\n});\n\nreturn structuredStories;"
      },
      "id": "content-parser",
      "name": "Content Parser",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [900, 200]
    },
    {
      "parameters": {
        "jsCode": "// Generate AI photo prompts for each story\nconst stories = $input.all();\nconst photoPrompts = [];\n\nconst promptTemplates = {\n  'early_struggles': [\n    'Young Tamil actor Vijay looking determined despite setbacks, struggling but hopeful, cinematic lighting, professional photography',\n    'Vijay in early career, small role but confident expression, dramatic lighting, motivational atmosphere',\n    'Young Vijay facing rejection but determined, comeback spirit, professional photography',\n    'Vijay in early struggles, financial difficulties but hopeful, cinematic lighting',\n    'Young Vijay working hard despite failures, determination in eyes, professional photography'\n  ],\n  'career_setbacks': [\n    'Vijay looking determined during career slump, comeback spirit, professional photography',\n    'Vijay reinventing himself, different acting styles, versatile and confident',\n    'Vijay almost written off but determined, comeback energy, professional lighting',\n    'Vijay completely changed approach, new confident style, professional photography',\n    'Vijay comeback journey, years of hard work, determined expression'\n  ],\n  'struggles_determination': [\n    'Vijay looking determined, long-term vision, professional photography',\n    'Vijay proving critics wrong, confident expression, professional lighting',\n    'Vijay facing criticism but determined, comeback spirit, professional photography',\n    'Vijay never giving up despite failures, determination in eyes, cinematic lighting',\n    'Vijay determination paying off, confident and successful, professional photography'\n  ],\n  'success_through_struggle': [\n    'Vijay holding award, confident and successful, professional lighting',\n    'Vijay in social impact pose, compassionate and caring, professional photography',\n    'Vijay supporting women empowerment, confident and supportive, professional lighting',\n    'Vijay in teaching role, wise and knowledgeable, professional photography',\n    'Vijay with family values, warm and caring, professional lighting'\n  ],\n  'career_evolution': [\n    'Vijay in business attire, professional setting, confident expression',\n    'Vijay mentoring others, supportive and wise, professional photography',\n    'Vijay taking creative control, confident and determined, professional lighting',\n    'Vijay supporting young actors, mentoring and caring, professional photography',\n    'Vijay giving back to industry, generous and supportive, professional lighting'\n  ],\n  'long_term_success': [\n    'Vijay looking experienced and wise, 30 years of success, professional photography',\n    'Vijay in social impact pose, making a difference, professional lighting',\n    'Vijay using platform for good, compassionate and caring, professional photography',\n    'Vijay success through consistency, determined and focused, professional lighting',\n    'Vijay inspiring generations, legacy and impact, professional photography'\n  ]\n};\n\nstories.forEach((story, index) => {\n  const theme = story.json.theme;\n  const prompts = promptTemplates[theme] || promptTemplates['early_struggles'];\n  const prompt = prompts[index] || prompts[0];\n  \n  photoPrompts.push({\n    storyId: story.json.id,\n    content: story.json.content,\n    motivationalMessage: story.json.motivationalMessage,\n    theme: story.json.theme,\n    themeName: story.json.themeName,\n    photoPrompt: prompt,\n    date: story.json.date\n  });\n});\n\nreturn photoPrompts;"
      },
      "id": "photo-prompt-generator",
      "name": "Photo Prompt Generator",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1120, 200]
    },
    {
      "parameters": {
        "url": "https://api.nanobanana.ai/v1/generate",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "nanoBananaApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{ $credentials.nanoBananaApi.apiKey }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "prompt",
              "value": "={{ $json.photoPrompt }}"
            },
            {
              "name": "style",
              "value": "cinematic"
            },
            {
              "name": "quality",
              "value": "high"
            },
            {
              "name": "size",
              "value": "1024x1024"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "ai-photo-generator",
      "name": "AI Photo Generator",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1340, 200]
    },
    {
      "parameters": {
        "jsCode": "// Combine story content with generated photos\nconst stories = $('Photo Prompt Generator').all();\nconst photos = $input.all();\n\nconst combinedContent = [];\n\nstories.forEach((story, index) => {\n  const photo = photos[index];\n  \n  combinedContent.push({\n    storyId: story.json.storyId,\n    content: story.json.content,\n    motivationalMessage: story.json.motivationalMessage,\n    theme: story.json.theme,\n    themeName: story.json.themeName,\n    photoUrl: photo.json.image_url || photo.json.url,\n    photoPrompt: story.json.photoPrompt,\n    date: story.json.date,\n    status: 'ready_for_video_creation'\n  });\n});\n\nreturn combinedContent;"
      },
      "id": "content-combiner",
      "name": "Content Combiner",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1560, 200]
    },
    {
      "parameters": {
        "jsCode": "// Select appropriate music for each story theme\nconst content = $input.all();\nconst musicDatabase = {\n  'early_struggles': ['Villu', 'Thuppakki'],\n  'career_setbacks': ['Theri', 'Sarkar'],\n  'struggles_determination': ['Mersal', 'Bigil'],\n  'success_through_struggle': ['Thuppakki', 'Mersal'],\n  'career_evolution': ['Master', 'Varisu'],\n  'long_term_success': ['Bigil', 'Sarkar']\n};\n\nconst finalContent = [];\n\ncontent.forEach((item, index) => {\n  const theme = item.json.theme;\n  const musicOptions = musicDatabase[theme] || musicDatabase['early_struggles'];\n  const selectedMusic = musicOptions[index % musicOptions.length];\n  \n  finalContent.push({\n    ...item.json,\n    music: selectedMusic,\n    musicUrl: `https://music.example.com/${selectedMusic.toLowerCase()}.mp3`,\n    videoTitle: `Did you know? Vijay's ${item.json.themeName} - Story ${index + 1}`,\n    hashtags: `#Vijay #Success #Motivation #${item.json.themeName.replace(/\\s+/g, '')} #DidYouKnow`,\n    callToAction: 'Follow for more motivation!',\n    status: 'ready_for_posting'\n  });\n});\n\nreturn finalContent;"
      },
      "id": "music-selector",
      "name": "Music Selector",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1780, 200]
    },
    {
      "parameters": {
        "url": "https://api.canva.com/v1/designs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "canvaApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{ $credentials.canvaApi.apiKey }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "template_id",
              "value": "vijay_success_story_template"
            },
            {
              "name": "content",
              "value": "={{ $json.content }}"
            },
            {
              "name": "photo_url",
              "value": "={{ $json.photoUrl }}"
            },
            {
              "name": "music_url",
              "value": "={{ $json.musicUrl }}"
            },
            {
              "name": "title",
              "value": "={{ $json.videoTitle }}"
            },
            {
              "name": "hashtags",
              "value": "={{ $json.hashtags }}"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "video-creator",
      "name": "Video Creator",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [2000, 200]
    },
    {
      "parameters": {
        "url": "https://graph.instagram.com/v18.0/me/media",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "instagramApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{ $credentials.instagramApi.accessToken }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "video_url",
              "value": "={{ $json.video_url }}"
            },
            {
              "name": "caption",
              "value": "={{ $json.content }}\\n\\n{{ $json.motivationalMessage }}\\n\\n{{ $json.hashtags }}\\n\\n{{ $json.callToAction }}"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "instagram-poster",
      "name": "Instagram Poster",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [2220, 100]
    },
    {
      "parameters": {
        "url": "https://graph.facebook.com/v18.0/me/videos",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "facebookApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{ $credentials.facebookApi.accessToken }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "file_url",
              "value": "={{ $json.video_url }}"
            },
            {
              "name": "description",
              "value": "={{ $json.content }}\\n\\n{{ $json.motivationalMessage }}\\n\\n{{ $json.hashtags }}\\n\\n{{ $json.callToAction }}"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "facebook-poster",
      "name": "Facebook Poster",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [2220, 200]
    },
    {
      "parameters": {
        "url": "https://www.googleapis.com/youtube/v3/videos",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "youtubeApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{ $credentials.youtubeApi.accessToken }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "snippet",
              "value": {
                "title": "={{ $json.videoTitle }}",
                "description": "={{ $json.content }}\\n\\n{{ $json.motivationalMessage }}\\n\\n{{ $json.hashtags }}\\n\\n{{ $json.callToAction }}"
              }
            },
            {
              "name": "status",
              "value": {
                "privacyStatus": "public"
              }
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "youtube-poster",
      "name": "YouTube Poster",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [2220, 300]
    },
    {
      "parameters": {
        "jsCode": "// Generate daily performance report\nconst content = $input.all();\nconst today = new Date().toISOString().split('T')[0];\n\nconst report = {\n  date: today,\n  totalContent: content.length,\n  themes: [...new Set(content.map(item => item.json.themeName))],\n  platforms: ['Instagram', 'Facebook', 'YouTube'],\n  status: 'completed',\n  content: content.map(item => ({\n    storyId: item.json.storyId,\n    theme: item.json.themeName,\n    title: item.json.videoTitle,\n    status: 'posted'\n  })),\n  nextRun: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString()\n};\n\nreturn report;"
      },
      "id": "daily-report",
      "name": "Daily Report Generator",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [2440, 200]
    }
  ],
  "connections": {
    "Daily Schedule Trigger": {
      "main": [
        [
          {
            "node": "Theme Selector",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Theme Selector": {
      "main": [
        [
          {
            "node": "Content Generator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Content Generator": {
      "main": [
        [
          {
            "node": "Content Parser",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Content Parser": {
      "main": [
        [
          {
            "node": "Photo Prompt Generator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Photo Prompt Generator": {
      "main": [
        [
          {
            "node": "AI Photo Generator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Photo Generator": {
      "main": [
        [
          {
            "node": "Content Combiner",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Content Combiner": {
      "main": [
        [
          {
            "node": "Music Selector",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Music Selector": {
      "main": [
        [
          {
            "node": "Video Creator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Video Creator": {
      "main": [
        [
          {
            "node": "Instagram Poster",
            "type": "main",
            "index": 0
          },
          {
            "node": "Facebook Poster",
            "type": "main",
            "index": 0
          },
          {
            "node": "YouTube Poster",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Instagram Poster": {
      "main": [
        [
          {
            "node": "Daily Report Generator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Facebook Poster": {
      "main": [
        [
          {
            "node": "Daily Report Generator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "YouTube Poster": {
      "main": [
        [
          {
            "node": "Daily Report Generator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-01-01T00:00:00.000Z",
      "updatedAt": "2024-01-01T00:00:00.000Z",
      "id": "vijay-success-stories",
      "name": "Vijay Success Stories"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2024-01-01T00:00:00.000Z",
  "versionId": "1"
}
